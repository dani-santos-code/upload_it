{"ast":null,"code":"var _jsxFileName = \"/Users/danielesantos/Desktop/upload_it/client/src/SignUpInput.js\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport { UserContext } from \"./UserContext\";\nexport default function SignUpInput() {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\"); //const [isConfirmed, setIsConfirmed] = useState(false);\n\n  const [error, setError] = useState({\n    status: false,\n    type: null\n  });\n  const {\n    handleSignUp\n  } = useContext(UserContext);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: e => {\n      e.preventDefault();\n      const isConfirmed = passwordConfirmation === password;\n\n      if (isConfirmed) {\n        handleSignUp({\n          name,\n          email,\n          password\n        });\n      } else {\n        setError({ ...error,\n          status: true,\n          type: \"Passwords don't match!\"\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledFieldSet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: \"Your Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"johndoe@john.com\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(StyledInput, {\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    type: \"password\",\n    placeholder: \"*********\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(StyledPassWordConfirmationInput, {\n    value: passwordConfirmation,\n    onChange: e => {\n      setPasswordConfirmation(e.target.value);\n    },\n    type: \"password\",\n    placeholder: \"*********\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), error.status && passwordConfirmation !== password ? /*#__PURE__*/React.createElement(PassWordError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, error.type) : \"\", /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n}\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\nconst StyledFieldSet = styled.fieldset`\n  border: none;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledInput = styled.input`\n  width: 308px;\n  height: 45px;\n  left: 66px;\n  top: 436px;\n  background: #ffffff;\n  border: 1px solid #4d4965;\n  box-sizing: border-box;\n  border-radius: 0px 50px 50px 0px;\n  padding: 20px;\n  margin-bottom: 20px;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 10px #1b219f;\n  }\n`;\nconst StyledPassWordConfirmationInput = styled(StyledInput)`\n  margin-bottom: 5px;\n`;\nconst StyledLabel = styled.label`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\nconst PassWordError = styled.span`\n  color: red;\n  display: block;\n  font-size: 14px;\n  padding-bottom: 5px;\n`;","map":{"version":3,"sources":["/Users/danielesantos/Desktop/upload_it/client/src/SignUpInput.js"],"names":["React","useState","useContext","styled","Button","UserContext","SignUpInput","email","setEmail","name","setName","password","setPassword","passwordConfirmation","setPasswordConfirmation","error","setError","status","type","handleSignUp","e","preventDefault","isConfirmed","target","value","Wrapper","div","StyledForm","form","StyledFieldSet","fieldset","StyledInput","input","StyledPassWordConfirmationInput","StyledLabel","label","PassWordError","span"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport { UserContext } from \"./UserContext\";\n\nexport default function SignUpInput() {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  //const [isConfirmed, setIsConfirmed] = useState(false);\n  const [error, setError] = useState({ status: false, type: null });\n  const { handleSignUp } = useContext(UserContext);\n\n  return (\n    <Wrapper>\n      <StyledForm\n        onSubmit={(e) => {\n          e.preventDefault();\n          const isConfirmed = passwordConfirmation === password;\n          if (isConfirmed) {\n            handleSignUp({ name, email, password });\n          } else {\n            setError({\n              ...error,\n              status: true,\n              type: \"Passwords don't match!\",\n            });\n          }\n        }}\n      >\n        <StyledFieldSet>\n          <StyledLabel>Name</StyledLabel>\n          <StyledInput\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Your Name\"\n            required={true}\n          />\n          <StyledLabel>Email</StyledLabel>\n          <StyledInput\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"johndoe@john.com\"\n            required={true}\n          />\n          <StyledLabel>Password</StyledLabel>\n          <StyledInput\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            placeholder=\"*********\"\n            required={true}\n          />\n          <StyledLabel>Confirm Password</StyledLabel>\n          <StyledPassWordConfirmationInput\n            value={passwordConfirmation}\n            onChange={(e) => {\n              setPasswordConfirmation(e.target.value);\n            }}\n            type=\"password\"\n            placeholder=\"*********\"\n            required={true}\n          />\n          {error.status && passwordConfirmation !== password ? (\n            <PassWordError>{error.type}</PassWordError>\n          ) : (\n            \"\"\n          )}\n          <Button>Sign Up</Button>\n        </StyledFieldSet>\n      </StyledForm>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledFieldSet = styled.fieldset`\n  border: none;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInput = styled.input`\n  width: 308px;\n  height: 45px;\n  left: 66px;\n  top: 436px;\n  background: #ffffff;\n  border: 1px solid #4d4965;\n  box-sizing: border-box;\n  border-radius: 0px 50px 50px 0px;\n  padding: 20px;\n  margin-bottom: 20px;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 10px #1b219f;\n  }\n`;\n\nconst StyledPassWordConfirmationInput = styled(StyledInput)`\n  margin-bottom: 5px;\n`;\nconst StyledLabel = styled.label`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nconst PassWordError = styled.span`\n  color: red;\n  display: block;\n  font-size: 14px;\n  padding-bottom: 5px;\n`;\n"]},"metadata":{},"sourceType":"module"}